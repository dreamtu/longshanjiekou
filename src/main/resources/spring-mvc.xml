<?xml version="1.0" encoding="UTF-8"?>
<!--Spring MVC配置文件  扫描控制器 视图模式 注解的启动 拦截器类权限验证  文件上传  自定义过滤 静态资源映射等设置 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context
  http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/mvc
  http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 默认的注解映射的支持  相当于注册了DefaultAnnotationHandlerMapping和AnnotationMethodHandlerAdapter
        即解决了@Controller注解的使用前提配置 扩充了注解驱动，可以将请求参数绑定到控制器参数-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 自动扫描该包，使SpringMVC认为com.ssm.*包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.ssm.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 配置自定义AuthInterceptor权限过滤拦截器 -->
    <!-- 如果不定义 mvc:mapping path 将拦截所有的URL请求 -->
<!--    <mvc:interceptors>
        <bean class="com.ssm.util.authority.AuthInterceptor"></bean>
    </mvc:interceptors>-->

    <!-- 如果当前请求为“/”时，则交给相应的视图解析器直接解析为视图 -->
    <mvc:view-controller path="/" view-name="index"/>
    <!-- 静态资源映射  处理RestFul风格的url的静态资源被拦截器拦截 不想进controller，可以在spring-mvc.xml中配置静态访问路径 jsp html文件若放在静态路径/images下，可以直接访问-->
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/fonts/**" location="/fonts/"/>
    <mvc:resources mapping="/plugins/**" location="/plugins/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <!-- 当上面要访问的静态资源不包括在上面的配置中时，则根据此配置来访问 -->
    <mvc:default-servlet-handler/>

    <!--视图解析器 定义跳转的文件的前后缀 ，视图模式配置   InternalResourceViewResolver:支持JSP视图解析-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置是自动给后面controller的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="prefix" value="/"/>
        <property name="suffix" value=".html"/>
    </bean>

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码格式 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000"/>
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960"/>
        <!-- 启用是为了推迟文件解析，以便捕获文件大小异常 -->
        <property name="resolveLazily" value="true"/>
    </bean>

</beans>